<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" >
  <head>
    <meta http-equiv="Content-Type" content="text/xml; charset=utf-8" />
    <meta name="description" content="Jeremiah's Coding Blog" />
    <meta name="keywords" content="Jeremiah, LaRocco, programming, books, coding, Lisp, C++" />
    <meta name="robots" content="index, follow" />
    <link rel="stylesheet" href="./pagestyles.css" type="text/css" />
    <title>Jeremiah's Coding Blog</title>
  </head>
  <body>
    <div class="navigation">
      <div class="navItem"><a href="http://github.com/jl2">Github</a></div>
      <div class="navItem"><a href="http://www.laroccophoto.com">Photography</a></div>
      <div class="navItem"><a href="https://500px.com/jlarocco">500px</a></div>
      <div class="navItem"><a href="https://pinboard.in/u:jlarocco/">Pinboard</a></div>
      <div class="navItem"><a href="https://vimeo.com/user5403988">Vimeo</a></div>
      <div class="navItem"><a href="https://soundcloud.com/jlarocco">SoundCloud</a></div>
      <div class="navItem"><a href="http://www.flickr.com/photos/jl_2">Flickr</a></div>
    </div>

    <div class="pageBody">
      <div class="pageEntry">
        <div class="section_header">
          <span class="date">November 29, 2015</span>
          <span class="title">New Github Pages Site</span>
        </div>
        <p>
          I haven't really done anything with my GitHub pages site, except setup Octopress and publish one blog post.
          Every time I've wanted to add a new entry I've got distracted fucking with Octopress and Ruby and Jekyll
          and a bunch of other stuff I don't care to learn, and ended up losing my motivation
        </p>
        <p> 
          This time it happened again, and I've decided to just get rid of Octopress and Jekyll entirely and go back to raw HTML.  
          It won't be the trendiest, prettiest website on the internet, but at least I know how to use it, and it won't have random
          shit breaking requiring an hour of tinkering to figure out which of a million Ruby gems is broken or not installed.
        </p>
      </div>

    </div>
    <div class="pageBody">
      <div class="pageEntry">
        <div class="section_header">
          <span class="title">GPX Library</span>
          <span class="date">November 12, 2014</span>
        </div>
        <p>
          I recently wrote a small library, called <a href="https://github.com/jl2/gpxtools">gpxtools</a>,
          for processing <a href="https://en.wikipedia.org/wiki/GPS_Exchange_Format">GPX</a> track files in
          Common Lisp.
          </p> <p>
          It doesn't have many features yet, but right now it can read a GPX file and compute
          elevation gain, elevation loss, and the total distance of all the tracks in the file.
        </p>
        <p>
          Here is a sample usage from the REPL:
        </p>
        <p>
        <script src="https://gist.github.com/jl2/dc14aea03b3705646757.js"></script>
        </p>
        <p>
          So far the most challenging part of the project was the calculation of distances given
          points in latitude and longitude.  Doing so requires converting the coordinates to the
          <a href="https://en.wikipedia.org/wiki/Universal_Transverse_Mercator_coordinate_system">Universal Transverse
          Mercator (UTM)</a> coordinate system which uses meters, and then calculating the distance.
        </p>
        <p>
          I wasn't able to find a library to do the conversion for me, so I <a href="https://github.com/jl2/utm">wrote my
          own</a>, and requested it be added to QuickLisp.  It looks like everything went well, and it should be in the next release.
        </p>
        <p>
          I'm planning to add more features to the gpxtools library, and to clean up the code in a
          few spots.
        </p>
        <p>
          One thing I want to do is add generic traversal code and use it to simplify functions like
          distance, elevation-gain, and elevation-loss that iterate over the entire GPX data
          structure.
        </p>
        <p>
          Another thing I want to add is the ability to split tracks at a certain location and
          selectively write the results back to one or more files.  I'll often start my GPS at the
          beginning of a hike, but forget to turn off the GPS when I finish hiking and drive away.
          The result is a GPX track with 10 miles of hiking and 50 miles of driving.  I may even try
          to do the cut automatically, ending the track when it gets back to (or reasonably close
          to) the origin, and splitting the drive out into a second track automatically.
        </p>
      </div>
    </div>
  </body>
</html>
